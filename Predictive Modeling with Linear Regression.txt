import pandas as pd
df = pd.read_csv("/content/The_Cancer_data_1500_V2.csv")
df.head(4)
# Vérifier les valeurs manquantes
missing_values = df.isnull().sum()

# Remplacer les valeurs manquantes 

df.fillna(df.mean(), inplace=True)

# Définir les caractéristiques (X) et la cible (y)
X = df.drop('Diagnosis', axis=1)
y = df['Diagnosis']
from sklearn.model_selection import train_test_split

# Diviser les données en ensembles d'entraînement et de test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
from sklearn.linear_model import LinearRegression

# Initialiser et entraîner le modèle de régression linéaire
model = LinearRegression()
model.fit(X_train, y_train)
from sklearn.linear_model import LinearRegression

from sklearn.metrics import mean_squared_error, r2_score

# Prédire sur l'ensemble de test
y_pred = model.predict(X_test)

# Calculer l'erreur quadratique moyenne (MSE) et le R²
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

mse, r2
import matplotlib.pyplot as plt

# Visualiser les valeurs réelles vs prédites
plt.figure(figsize=(10, 6))
plt.scatter(y_test, y_pred, edgecolors=(0, 0, 0))
plt.plot([y_test.min(), y_test.max()], [y_test.min(), y_test.max()], 'k--', lw=4)
plt.xlabel('Valeurs réelles')
plt.ylabel('Valeurs prédites')
plt.title('Valeurs réelles vs Valeurs prédites')
plt.grid(True)
plt.show()